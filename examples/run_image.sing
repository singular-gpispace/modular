LIB "modulargspc.lib";
LIB "random.lib";
LIB "modstd.lib";
LIB "modimage.lib";

configToken gc = configure_gspc();

gc.options.tmpdir = "temp";
gc.options.nodefile = "nodefile";
gc.options.procspernode = 4;
gc.options.loghostfile = "loghostfile";
gc.options.logport = 9876;

configToken pc = configure_modular();

pc.options.library = "modularImage.lib";
pc.options.procCompute = "ImageRationalMap";
pc.options.procLift = "liftt";
pc.options.procReconstest = "reconstest";
pc.options.bal1 = 4;
pc.options.bal2 = 8;

generateIOTokenTypes();

ring R = 0,(t0,t1,t2),dp;
//ideal I =  11x7y+3x+1,z4+7;
//ideal I = t1^5+10*t1^4*t2+20*t1^3*t2^2+130*t1^2*t2^3-20*t1*t2^4+20*t2^5-2*t1^4*t0-40*t1^3*t2*t0-150*t1^2*t2^2*t0-90*t1*t2^3*t0-40*t2^4*t0+t1^3*t0^2+30*t1^2*t2*t0^2+110*t1*t2^2*t0^2+20*t2^3*t0^2;
ideal I = t1^5+10*t1^4*t2+20*t1^3*t2^2+130*t1^2*t2^3-20*t1*t2^4+20*t2^5-2*t1^4*t0-40*t1^3*t2*t0-150*t1^2*t2^2*t0-90*t1*t2^3*t0-40*t2^4*t0+t1^3*t0^2+30*t1^2*t2*t0^2+110*t1*t2^2*t0^2+20*t2^3*t0^2;
I;

ideal phi=-27366*t0^2-11196*t0*t1-28499*t1^2-20909*t0*t2-4360*t1*t2-9450*t2^2
,17153*t0^2-22209*t0*t1+23781*t1^2-18124*t0*t2+109*t1*t2-14294*t2^2
,6663*t0^2-28251*t0*t1+6031*t1^2-23523*t0*t2-25063*t1*t2+24375*t2^2
,-23667*t0^2+7665*t0*t1-15212*t1^2-26553*t0*t2-16611*t1*t2+3901*t2^2
-6679*t0^2+1417*t0*t1-27864*t1^2-20277*t0*t2+14418*t1*t2-11185*t2^2
,-15482*t0^2+9884*t0*t1+18759*t1^2-25679*t0*t2-29370*t1*t2-13304*t2^2
,1457*t0^2+25257*t0*t1-19136*t1^2-27032*t0*t2+9231*t1*t2-24645*t2^2
,29375*t0^2+23001*t0*t1-18817*t1^2+925*t0*t2-19765*t1*t2+15787*t2^2;
//ideal phi = randomid(maxideal(3),10);
//ideal phi = t0^5,t1*t2^4,t1^5,t2^5;
//ideal phi = randomid(maxideal(15),2);
//ideal phi = -429697*t0^25+709139*t0^24*t1+220263*t0^23*t1^2-472938*t0^22*t1^3-487887*t0^21*t1^4+42192*t0^20*t1^5-623490*t0^19*t1^6+539018*t0^18*t1^7-76396*t0^17*t1^8-132661*t0^16*t1^9-380294*t0^15*t1^10+332244*t0^14*t1^11-921104*t0^13*t1^12+593760*t0^12*t1^13-267529*t0^11*t1^14+442152*t0^10*t1^15+830928*t0^9*t1^16-493908*t0^8*t1^17-977526*t0^7*t1^18+40573*t0^6*t1^19+955122*t0^5*t1^20+650368*t0^4*t1^21-819017*t0^3*t1^22-976705*t0^2*t1^23+421718*t0*t1^24+522667*t1^25+898796*t0^24*t2-29222*t0^23*t1*t2-794604*t0^22*t1^2*t2-676903*t0^21*t1^3*t2+390786*t0^20*t1^4*t2+318073*t0^19*t1^5*t2-493583*t0^18*t1^6*t2-456354*t0^17*t1^7*t2-345226*t0^16*t1^8*t2-713092*t0^15*t1^9*t2+367882*t0^14*t1^10*t2-912085*t0^13*t1^11*t2+41371*t0^12*t1^12*t2+54115*t0^11*t1^13*t2+854001*t0^10*t1^14*t2-508045*t0^9*t1^15*t2-733144*t0^8*t1^16*t2-642882*t0^7*t1^17*t2-307926*t0^6*t1^18*t2-510000*t0^5*t1^19*t2-863667*t0^4*t1^20*t2+143020*t0^3*t1^21*t2+493872*t0^2*t1^22*t2+861650*t0*t1^23*t2+361916*t1^24*t2-749691*t0^23*t2^2-357374*t0^22*t1*t2^2-390645*t0^21*t1^2*t2^2+627152*t0^20*t1^3*t2^2+397938*t0^19*t1^4*t2^2-101405*t0^18*t1^5*t2^2-528051*t0^17*t1^6*t2^2-31812*t0^16*t1^7*t2^2+725052*t0^15*t1^8*t2^2+75447*t0^14*t1^9*t2^2+954981*t0^13*t1^10*t2^2-448679*t0^12*t1^11*t2^2+45421*t0^11*t1^12*t2^2+563493*t0^10*t1^13*t2^2+10857*t0^9*t1^14*t2^2-376862*t0^8*t1^15*t2^2+333707*t0^7*t1^16*t2^2+641212*t0^6*t1^17*t2^2-604963*t0^5*t1^18*t2^2+628653*t0^4*t1^19*t2^2+977332*t0^3*t1^20*t2^2+287925*t0^2*t1^21*t2^2+489890*t0*t1^22*t2^2-752451*t1^23*t2^2-892937*t0^22*t2^3-633723*t0^21*t1*t2^3+457075*t0^20*t1^2*t2^3+7596*t0^19*t1^3*t2^3-469642*t0^18*t1^4*t2^3+648870*t0^17*t1^5*t2^3+446622*t0^16*t1^6*t2^3-187293*t0^15*t1^7*t2^3-653168*t0^14*t1^8*t2^3+20984*t0^13*t1^9*t2^3+265160*t0^12*t1^10*t2^3+764632*t0^11*t1^11*t2^3+871923*t0^10*t1^12*t2^3+153044*t0^9*t1^13*t2^3-639826*t0^8*t1^14*t2^3-359748*t0^7*t1^15*t2^3+3960*t0^6*t1^16*t2^3+962598*t0^5*t1^17*t2^3+147749*t0^4*t1^18*t2^3+789163*t0^3*t1^19*t2^3-606495*t0^2*t1^20*t2^3+907046*t0*t1^21*t2^3+663178*t1^22*t2^3-241186*t0^21*t2^4-537074*t0^20*t1*t2^4-844593*t0^19*t1^2*t2^4-750705*t0^18*t1^3*t2^4+826421*t0^17*t1^4*t2^4-520576*t0^16*t1^5*t2^4-156677*t0^15*t1^6*t2^4-27337*t0^14*t1^7*t2^4-746901*t0^13*t1^8*t2^4-366420*t0^12*t1^9*t2^4-809505*t0^11*t1^10*t2^4+371107*t0^10*t1^11*t2^4-772275*t0^9*t1^12*t2^4+299163*t0^8*t1^13*t2^4-518309*t0^7*t1^14*t2^4+488523*t0^6*t1^15*t2^4+248751*t0^5*t1^16*t2^4-871357*t0^4*t1^17*t2^4-235448*t0^3*t1^18*t2^4+466905*t0^2*t1^19*t2^4+290881*t0*t1^20*t2^4+38756*t1^21*t2^4-954830*t0^20*t2^5+359947*t0^19*t1*t2^5-437308*t0^18*t1^2*t2^5-555427*t0^17*t1^3*t2^5+456151*t0^16*t1^4*t2^5-314964*t0^15*t1^5*t2^5-772278*t0^14*t1^6*t2^5-411821*t0^13*t1^7*t2^5+849468*t0^12*t1^8*t2^5-900593*t0^11*t1^9*t2^5+879356*t0^10*t1^10*t2^5-906384*t0^9*t1^11*t2^5-957022*t0^8*t1^12*t2^5-847370*t0^7*t1^13*t2^5+375162*t0^6*t1^14*t2^5-60305*t0^5*t1^15*t2^5-220993*t0^4*t1^16*t2^5+519408*t0^3*t1^17*t2^5-801252*t0^2*t1^18*t2^5+164804*t0*t1^19*t2^5+666386*t1^20*t2^5-910856*t0^19*t2^6+904982*t0^18*t1*t2^6-617826*t0^17*t1^2*t2^6+309892*t0^16*t1^3*t2^6-957321*t0^15*t1^4*t2^6-757462*t0^14*t1^5*t2^6-51880*t0^13*t1^6*t2^6-264616*t0^12*t1^7*t2^6+418977*t0^11*t1^8*t2^6-905808*t0^10*t1^9*t2^6-59634*t0^9*t1^10*t2^6-382528*t0^8*t1^11*t2^6+153606*t0^7*t1^12*t2^6+573233*t0^6*t1^13*t2^6-963170*t0^5*t1^14*t2^6+998732*t0^4*t1^15*t2^6-717525*t0^3*t1^16*t2^6-411755*t0^2*t1^17*t2^6-90266*t0*t1^18*t2^6-296939*t1^19*t2^6+494157*t0^18*t2^7+716*t0^17*t1*t2^7-825826*t0^16*t1^2*t2^7-138095*t0^15*t1^3*t2^7+871632*t0^14*t1^4*t2^7+531153*t0^13*t1^5*t2^7-236756*t0^12*t1^6*t2^7+576312*t0^11*t1^7*t2^7-230193*t0^10*t1^8*t2^7+775298*t0^9*t1^9*t2^7-49343*t0^8*t1^10*t2^7-708162*t0^7*t1^11*t2^7-685655*t0^6*t1^12*t2^7-275654*t0^5*t1^13*t2^7+515143*t0^4*t1^14*t2^7+192316*t0^3*t1^15*t2^7+952833*t0^2*t1^16*t2^7+699350*t0*t1^17*t2^7-943761*t1^18*t2^7+181123*t0^17*t2^8-763793*t0^16*t1*t2^8+829904*t0^15*t1^2*t2^8+85781*t0^14*t1^3*t2^8-706635*t0^13*t1^4*t2^8+718373*t0^12*t1^5*t2^8-861509*t0^11*t1^6*t2^8+812605*t0^10*t1^7*t2^8+130676*t0^9*t1^8*t2^8-214532*t0^8*t1^9*t2^8-68756*t0^7*t1^10*t2^8+730709*t0^6*t1^11*t2^8-342887*t0^5*t1^12*t2^8-477094*t0^4*t1^13*t2^8-457938*t0^3*t1^14*t2^8+687622*t0^2*t1^15*t2^8-948787*t0*t1^16*t2^8-116460*t1^17*t2^8+873652*t0^16*t2^9+613933*t0^15*t1*t2^9+633911*t0^14*t1^2*t2^9-554204*t0^13*t1^3*t2^9+738863*t0^12*t1^4*t2^9+966223*t0^11*t1^5*t2^9-816625*t0^10*t1^6*t2^9-520639*t0^9*t1^7*t2^9+931611*t0^8*t1^8*t2^9-79310*t0^7*t1^9*t2^9+468294*t0^6*t1^10*t2^9-921717*t0^5*t1^11*t2^9-895663*t0^4*t1^12*t2^9+862868*t0^3*t1^13*t2^9+690014*t0^2*t1^14*t2^9-105781*t0*t1^15*t2^9-285291*t1^16*t2^9+993542*t0^15*t2^10+804561*t0^14*t1*t2^10-693458*t0^13*t1^2*t2^10-721020*t0^12*t1^3*t2^10+316037*t0^11*t1^4*t2^10+80180*t0^10*t1^5*t2^10-990521*t0^9*t1^6*t2^10+633410*t0^8*t1^7*t2^10-268366*t0^7*t1^8*t2^10+603725*t0^6*t1^9*t2^10+871957*t0^5*t1^10*t2^10+480087*t0^4*t1^11*t2^10+966044*t0^3*t1^12*t2^10-381253*t0^2*t1^13*t2^10-110917*t0*t1^14*t2^10+259926*t1^15*t2^10+680109*t0^14*t2^11-553990*t0^13*t1*t2^11-348227*t0^12*t1^2*t2^11-289906*t0^11*t1^3*t2^11-388116*t0^10*t1^4*t2^11-479473*t0^9*t1^5*t2^11-835320*t0^8*t1^6*t2^11-524704*t0^7*t1^7*t2^11+299274*t0^6*t1^8*t2^11-900114*t0^5*t1^9*t2^11+813874*t0^4*t1^10*t2^11+4285*t0^3*t1^11*t2^11-785894*t0^2*t1^12*t2^11-8222*t0*t1^13*t2^11+264740*t1^14*t2^11-327017*t0^13*t2^12-83792*t0^12*t1*t2^12+495852*t0^11*t1^2*t2^12-904892*t0^10*t1^3*t2^12-965868*t0^9*t1^4*t2^12-986195*t0^8*t1^5*t2^12-533578*t0^7*t1^6*t2^12+548804*t0^6*t1^7*t2^12-867029*t0^5*t1^8*t2^12+388091*t0^4*t1^9*t2^12+653826*t0^3*t1^10*t2^12+832339*t0^2*t1^11*t2^12-164845*t0*t1^12*t2^12-427139*t1^13*t2^12-615642*t0^12*t2^13-265480*t0^11*t1*t2^13+752633*t0^10*t1^2*t2^13-20717*t0^9*t1^3*t2^13-71281*t0^8*t1^4*t2^13+320710*t0^7*t1^5*t2^13-481019*t0^6*t1^6*t2^13+441445*t0^5*t1^7*t2^13+278694*t0^4*t1^8*t2^13-356523*t0^3*t1^9*t2^13-538229*t0^2*t1^10*t2^13+402352*t0*t1^11*t2^13+422178*t1^12*t2^13+683831*t0^11*t2^14+79679*t0^10*t1*t2^14+209163*t0^9*t1^2*t2^14+109232*t0^8*t1^3*t2^14-406718*t0^7*t1^4*t2^14+809855*t0^6*t1^5*t2^14-957970*t0^5*t1^6*t2^14+616599*t0^4*t1^7*t2^14+716302*t0^3*t1^8*t2^14+945739*t0^2*t1^9*t2^14-303013*t0*t1^10*t2^14-31219*t1^11*t2^14+836867*t0^10*t2^15-672991*t0^9*t1*t2^15+438495*t0^8*t1^2*t2^15+206202*t0^7*t1^3*t2^15-164352*t0^6*t1^4*t2^15-245809*t0^5*t1^5*t2^15+753053*t0^4*t1^6*t2^15+385399*t0^3*t1^7*t2^15-557288*t0^2*t1^8*t2^15-731112*t0*t1^9*t2^15-527073*t1^10*t2^15+911475*t0^9*t2^16-344929*t0^8*t1*t2^16+796011*t0^7*t1^2*t2^16-852519*t0^6*t1^3*t2^16-641413*t0^5*t1^4*t2^16-371130*t0^4*t1^5*t2^16-880480*t0^3*t1^6*t2^16-253749*t0^2*t1^7*t2^16-794332*t0*t1^8*t2^16-934117*t1^9*t2^16-698629*t0^8*t2^17+882652*t0^7*t1*t2^17-391448*t0^6*t1^2*t2^17-822575*t0^5*t1^3*t2^17+152303*t0^4*t1^4*t2^17+761435*t0^3*t1^5*t2^17+72241*t0^2*t1^6*t2^17-738916*t0*t1^7*t2^17-1684*t1^8*t2^17+886904*t0^7*t2^18-353592*t0^6*t1*t2^18+183829*t0^5*t1^2*t2^18-340116*t0^4*t1^3*t2^18+698037*t0^3*t1^4*t2^18+898306*t0^2*t1^5*t2^18-400394*t0*t1^6*t2^18+253052*t1^7*t2^18+905995*t0^6*t2^19+428561*t0^5*t1*t2^19+444510*t0^4*t1^2*t2^19-376109*t0^3*t1^3*t2^19-777161*t0^2*t1^4*t2^19+236337*t0*t1^5*t2^19-580568*t1^6*t2^19+699086*t0^5*t2^20-969817*t0^4*t1*t2^20+657795*t0^3*t1^2*t2^20+41168*t0^2*t1^3*t2^20-866609*t0*t1^4*t2^20+754939*t1^5*t2^20-588043*t0^4*t2^21+96172*t0^3*t1*t2^21+938920*t0^2*t1^2*t2^21+859967*t0*t1^3*t2^21+42982*t1^4*t2^21-148867*t0^3*t2^22-513184*t0^2*t1*t2^22-856555*t0*t1^2*t2^22-86080*t1^3*t2^22-424893*t0^2*t2^23-190531*t0*t1*t2^23+503692*t1^2*t2^23-901449*t0*t2^24+47856*t1*t2^24+880805*t2^25,
//759911*t0^25-246589*t0^24*t1+957125*t0^23*t1^2-772912*t0^22*t1^3+866520*t0^21*t1^4+365899*t0^20*t1^5-277549*t0^19*t1^6-705452*t0^18*t1^7-140595*t0^17*t1^8+375586*t0^16*t1^9-771344*t0^15*t1^10+94520*t0^14*t1^11+944790*t0^13*t1^12-122360*t0^12*t1^13+373369*t0^11*t1^14+349099*t0^10*t1^15+268257*t0^9*t1^16-811857*t0^8*t1^17-137639*t0^7*t1^18-864412*t0^6*t1^19+520655*t0^5*t1^20-93857*t0^4*t1^21+547776*t0^3*t1^22-255534*t0^2*t1^23-263040*t0*t1^24-744628*t1^25-924358*t0^24*t2+831020*t0^23*t1*t2-962466*t0^22*t1^2*t2-8782*t0^21*t1^3*t2-983424*t0^20*t1^4*t2+911053*t0^19*t1^5*t2+151733*t0^18*t1^6*t2+261845*t0^17*t1^7*t2+158797*t0^16*t1^8*t2-464151*t0^15*t1^9*t2-805412*t0^14*t1^10*t2-156497*t0^13*t1^11*t2+144946*t0^12*t1^12*t2-584742*t0^11*t1^13*t2+930227*t0^10*t1^14*t2+90574*t0^9*t1^15*t2+645848*t0^8*t1^16*t2-670361*t0^7*t1^17*t2+597989*t0^6*t1^18*t2+805292*t0^5*t1^19*t2-477083*t0^4*t1^20*t2+300811*t0^3*t1^21*t2+547591*t0^2*t1^22*t2-401397*t0*t1^23*t2-526576*t1^24*t2+671647*t0^23*t2^2+126894*t0^22*t1*t2^2+284619*t0^21*t1^2*t2^2+907689*t0^20*t1^3*t2^2-225671*t0^19*t1^4*t2^2+153769*t0^18*t1^5*t2^2+829603*t0^17*t1^6*t2^2-432757*t0^16*t1^7*t2^2-774034*t0^15*t1^8*t2^2+538841*t0^14*t1^9*t2^2+800432*t0^13*t1^10*t2^2-184745*t0^12*t1^11*t2^2-855207*t0^11*t1^12*t2^2-360440*t0^10*t1^13*t2^2+410703*t0^9*t1^14*t2^2+149391*t0^8*t1^15*t2^2+922795*t0^7*t1^16*t2^2+448942*t0^6*t1^17*t2^2+680431*t0^5*t1^18*t2^2+304207*t0^4*t1^19*t2^2+421614*t0^3*t1^20*t2^2+878670*t0^2*t1^21*t2^2+810259*t0*t1^22*t2^2-190788*t1^23*t2^2-891818*t0^22*t2^3-957074*t0^21*t1*t2^3-259978*t0^20*t1^2*t2^3+796413*t0^19*t1^3*t2^3-426145*t0^18*t1^4*t2^3+338097*t0^17*t1^5*t2^3+150906*t0^16*t1^6*t2^3-607372*t0^15*t1^7*t2^3+37806*t0^14*t1^8*t2^3+610553*t0^13*t1^9*t2^3-909520*t0^12*t1^10*t2^3-106808*t0^11*t1^11*t2^3-148935*t0^10*t1^12*t2^3+128686*t0^9*t1^13*t2^3-227230*t0^8*t1^14*t2^3-659006*t0^7*t1^15*t2^3+990152*t0^6*t1^16*t2^3+707989*t0^5*t1^17*t2^3+226019*t0^4*t1^18*t2^3+35023*t0^3*t1^19*t2^3+13084*t0^2*t1^20*t2^3-493827*t0*t1^21*t2^3+719579*t1^22*t2^3+213409*t0^21*t2^4+760165*t0^20*t1*t2^4+752179*t0^19*t1^2*t2^4-463597*t0^18*t1^3*t2^4+47149*t0^17*t1^4*t2^4+467066*t0^16*t1^5*t2^4-369822*t0^15*t1^6*t2^4+634946*t0^14*t1^7*t2^4-527707*t0^13*t1^8*t2^4+130030*t0^12*t1^9*t2^4-33219*t0^11*t1^10*t2^4-862948*t0^10*t1^11*t2^4+979802*t0^9*t1^12*t2^4-887674*t0^8*t1^13*t2^4+783570*t0^7*t1^14*t2^4-206822*t0^6*t1^15*t2^4-785258*t0^5*t1^16*t2^4+244218*t0^4*t1^17*t2^4+692156*t0^3*t1^18*t2^4+148519*t0^2*t1^19*t2^4+947156*t0*t1^20*t2^4-865864*t1^21*t2^4-872713*t0^20*t2^5-818453*t0^19*t1*t2^5-929906*t0^18*t1^2*t2^5+174147*t0^17*t1^3*t2^5-796027*t0^16*t1^4*t2^5+706109*t0^15*t1^5*t2^5+94957*t0^14*t1^6*t2^5+691527*t0^13*t1^7*t2^5+972331*t0^12*t1^8*t2^5-847574*t0^11*t1^9*t2^5+923760*t0^10*t1^10*t2^5-296502*t0^9*t1^11*t2^5-4962*t0^8*t1^12*t2^5+658304*t0^7*t1^13*t2^5+429341*t0^6*t1^14*t2^5-425526*t0^5*t1^15*t2^5-57267*t0^4*t1^16*t2^5-19390*t0^3*t1^17*t2^5+473372*t0^2*t1^18*t2^5+33143*t0*t1^19*t2^5-111310*t1^20*t2^5-291392*t0^19*t2^6+723989*t0^18*t1*t2^6-349221*t0^17*t1^2*t2^6-787410*t0^16*t1^3*t2^6+209534*t0^15*t1^4*t2^6+271227*t0^14*t1^5*t2^6+700701*t0^13*t1^6*t2^6+416888*t0^12*t1^7*t2^6-377481*t0^11*t1^8*t2^6-453346*t0^10*t1^9*t2^6+89011*t0^9*t1^10*t2^6+430602*t0^8*t1^11*t2^6-138615*t0^7*t1^12*t2^6+132806*t0^6*t1^13*t2^6+615023*t0^5*t1^14*t2^6+599306*t0^4*t1^15*t2^6-828054*t0^3*t1^16*t2^6-152735*t0^2*t1^17*t2^6-559989*t0*t1^18*t2^6-390557*t1^19*t2^6+237875*t0^18*t2^7+575781*t0^17*t1*t2^7-497257*t0^16*t1^2*t2^7+238009*t0^15*t1^3*t2^7-825116*t0^14*t1^4*t2^7-89257*t0^13*t1^5*t2^7-717450*t0^12*t1^6*t2^7+420445*t0^11*t1^7*t2^7+299160*t0^10*t1^8*t2^7-472701*t0^9*t1^9*t2^7-585752*t0^8*t1^10*t2^7+176523*t0^7*t1^11*t2^7-394390*t0^6*t1^12*t2^7+542029*t0^5*t1^13*t2^7+436128*t0^4*t1^14*t2^7-871664*t0^3*t1^15*t2^7+737549*t0^2*t1^16*t2^7+368014*t0*t1^17*t2^7-280927*t1^18*t2^7-931654*t0^17*t2^8+458847*t0^16*t1*t2^8+394792*t0^15*t1^2*t2^8-129699*t0^14*t1^3*t2^8-716857*t0^13*t1^4*t2^8+777854*t0^12*t1^5*t2^8-425756*t0^11*t1^6*t2^8-960384*t0^10*t1^7*t2^8-536982*t0^9*t1^8*t2^8+958907*t0^8*t1^9*t2^8+273810*t0^7*t1^10*t2^8+89511*t0^6*t1^11*t2^8+762215*t0^5*t1^12*t2^8-29038*t0^4*t1^13*t2^8-946866*t0^3*t1^14*t2^8-605353*t0^2*t1^15*t2^8-987312*t0*t1^16*t2^8-579331*t1^17*t2^8+32594*t0^16*t2^9+747516*t0^15*t1*t2^9-360166*t0^14*t1^2*t2^9+936857*t0^13*t1^3*t2^9+232382*t0^12*t1^4*t2^9+882875*t0^11*t1^5*t2^9-880213*t0^10*t1^6*t2^9+873468*t0^9*t1^7*t2^9-936133*t0^8*t1^8*t2^9-892526*t0^7*t1^9*t2^9+459990*t0^6*t1^10*t2^9-63972*t0^5*t1^11*t2^9-787088*t0^4*t1^12*t2^9-672998*t0^3*t1^13*t2^9-657912*t0^2*t1^14*t2^9-916795*t0*t1^15*t2^9+790846*t1^16*t2^9+605971*t0^15*t2^10+884912*t0^14*t1*t2^10-40122*t0^13*t1^2*t2^10-858260*t0^12*t1^3*t2^10-22766*t0^11*t1^4*t2^10+594404*t0^10*t1^5*t2^10-982145*t0^9*t1^6*t2^10-325122*t0^8*t1^7*t2^10+766099*t0^7*t1^8*t2^10-640689*t0^6*t1^9*t2^10-325215*t0^5*t1^10*t2^10+193858*t0^4*t1^11*t2^10-624660*t0^3*t1^12*t2^10+18338*t0^2*t1^13*t2^10+489917*t0*t1^14*t2^10+609414*t1^15*t2^10+639593*t0^14*t2^11-715989*t0^13*t1*t2^11-719742*t0^12*t1^2*t2^11+652640*t0^11*t1^3*t2^11+723633*t0^10*t1^4*t2^11+997025*t0^9*t1^5*t2^11-773065*t0^8*t1^6*t2^11-280330*t0^7*t1^7*t2^11+267673*t0^6*t1^8*t2^11+283293*t0^5*t1^9*t2^11-120992*t0^4*t1^10*t2^11+332784*t0^3*t1^11*t2^11+673513*t0^2*t1^12*t2^11-469098*t0*t1^13*t2^11+742821*t1^14*t2^11+861460*t0^13*t2^12-314016*t0^12*t1*t2^12+459394*t0^11*t1^2*t2^12+663031*t0^10*t1^3*t2^12+871292*t0^9*t1^4*t2^12-992624*t0^8*t1^5*t2^12+86146*t0^7*t1^6*t2^12-913035*t0^6*t1^7*t2^12+88374*t0^5*t1^8*t2^12-922628*t0^4*t1^9*t2^12+850802*t0^3*t1^10*t2^12+780905*t0^2*t1^11*t2^12+585116*t0*t1^12*t2^12-452057*t1^13*t2^12+651314*t0^12*t2^13+883011*t0^11*t1*t2^13-732765*t0^10*t1^2*t2^13-876127*t0^9*t1^3*t2^13+155213*t0^8*t1^4*t2^13-932934*t0^7*t1^5*t2^13-920717*t0^6*t1^6*t2^13-593971*t0^5*t1^7*t2^13+391235*t0^4*t1^8*t2^13-165134*t0^3*t1^9*t2^13-143839*t0^2*t1^10*t2^13-714446*t0*t1^11*t2^13-115659*t1^12*t2^13+843225*t0^11*t2^14+113434*t0^10*t1*t2^14+935323*t0^9*t1^2*t2^14+596450*t0^8*t1^3*t2^14+224207*t0^7*t1^4*t2^14+273136*t0^6*t1^5*t2^14+160165*t0^5*t1^6*t2^14-364587*t0^4*t1^7*t2^14+504685*t0^3*t1^8*t2^14+514092*t0^2*t1^9*t2^14-877433*t0*t1^10*t2^14-622292*t1^11*t2^14+717893*t0^10*t2^15-482827*t0^9*t1*t2^15+499959*t0^8*t1^2*t2^15-231248*t0^7*t1^3*t2^15-795791*t0^6*t1^4*t2^15+927345*t0^5*t1^5*t2^15-473224*t0^4*t1^6*t2^15-652223*t0^3*t1^7*t2^15-200913*t0^2*t1^8*t2^15+73882*t0*t1^9*t2^15+46445*t1^10*t2^15-904275*t0^9*t2^16-666760*t0^8*t1*t2^16-827363*t0^7*t1^2*t2^16+619881*t0^6*t1^3*t2^16-715065*t0^5*t1^4*t2^16-576601*t0^4*t1^5*t2^16+963252*t0^3*t1^6*t2^16+455746*t0^2*t1^7*t2^16+25201*t0*t1^8*t2^16-534842*t1^9*t2^16+881701*t0^8*t2^17-202658*t0^7*t1*t2^17+325963*t0^6*t1^2*t2^17-208671*t0^5*t1^3*t2^17-802127*t0^4*t1^4*t2^17+18702*t0^3*t1^5*t2^17+738544*t0^2*t1^6*t2^17-881169*t0*t1^7*t2^17-170916*t1^8*t2^17-253790*t0^7*t2^18+721270*t0^6*t1*t2^18-551643*t0^5*t1^2*t2^18-993011*t0^4*t1^3*t2^18+750580*t0^3*t1^4*t2^18-652759*t0^2*t1^5*t2^18-728165*t0*t1^6*t2^18-208110*t1^7*t2^18-206146*t0^6*t2^19+825568*t0^5*t1*t2^19-573517*t0^4*t1^2*t2^19-229832*t0^3*t1^3*t2^19-326621*t0^2*t1^4*t2^19+963922*t0*t1^5*t2^19+770556*t1^6*t2^19-888219*t0^5*t2^20-286418*t0^4*t1*t2^20-303865*t0^3*t1^2*t2^20-662741*t0^2*t1^3*t2^20-513842*t0*t1^4*t2^20+209666*t1^5*t2^20-881098*t0^4*t2^21-668416*t0^3*t1*t2^21+846690*t0^2*t1^2*t2^21+243568*t0*t1^3*t2^21+543714*t1^4*t2^21-748979*t0^3*t2^22+695359*t0^2*t1*t2^22+644325*t0*t1^2*t2^22+312552*t1^3*t2^22-834643*t0^2*t2^23+112574*t0*t1*t2^23+168282*t1^2*t2^23-682951*t0*t2^24-378634*t1*t2^24-771081*t2^25;
phi;

token input;
input.fieldnames = list("map","variety");
input.data[1] = phi;
input.data[2] = I;
list l = list(input);
int num_primes = 2000;

intvec primeiv = primeList(I, num_primes);
int i;
list primelists;

token t;
for (i = 1; i <= num_primes; i++)
{
  t.fieldnames = list("int");
  t.data = list(primeiv[i]);
	primelists[i] = t;
}
system("--ticks-per-sec",10^3);
int tim;
rtimer = 0;
def re = gspc_modular(l,primelists, gc, pc);
tim=rtimer;
def r = re.r_data;
setring r;
re.data[1];
tim;
