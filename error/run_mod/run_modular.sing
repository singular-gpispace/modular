LIB "modulargspc.lib";

configToken gc = configure_gspc();

gc.options.tmpdir = "temp";
gc.options.nodefile = "nodefile";
gc.options.procspernode = 4;
gc.options.loghostfile = "loghostfile";
gc.options.logport = 9876;

configToken pc = configure_modular();

pc.options.libGenerate = "modulargp.lib";
pc.options.procGenerate = "generate";

generateIOTokenTypes();

ring R = 0,(x,y,z),lp;
ideal I =  x7y+3x+1,z4+7;
I;

token input;
input.fieldnames = list("generators");
input.data = list(I);
list l = list(input);
list primeiv = list(int(11),int(7));

int i;
list primelists;
token t;
for (i = 1; i <= 2; i++)
{
  t.fieldnames = list("int");
  t.data = list(primeiv[i]);
	primelists[i] = t;
}

def re = gspc_modular(l,primelists, gc, pc);

